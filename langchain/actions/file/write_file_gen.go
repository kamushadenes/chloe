// Code generated by go generate; DO NOT EDIT.
// This file was generated at 2023-09-14 02:50:08.636105 -0300 -03 m=+0.007665626
package file

import (
	"fmt"
	"github.com/kamushadenes/chloe/errors"
	"github.com/kamushadenes/chloe/langchain/memory"
	"github.com/kamushadenes/chloe/structs/action_structs"
	"github.com/kamushadenes/chloe/langchain/actions/functions"
)

type WriteFileAction struct {
	Name        string
	Description string
	Params *action_structs.ActionParameterSet
	Extra map[string]interface{}
}
// NewWriteFileAction creates a new WriteFileAction with Params initialized
func NewWriteFileAction() action_structs.Action {
	var params action_structs.ActionParameterSet
	params.AddParam(&action_structs.ActionParameter{
		Name:        "path",
		Description: "Path to the file to write to",
		Type:        "string",
		Required:    true,
		Enum:        nil,
	})
	params.AddParam(&action_structs.ActionParameter{
		Name:        "content",
		Description: "Content to write to the file",
		Type:        "string",
		Required:    true,
		Enum:        nil,
	})

	return &WriteFileAction{
		Name:   "write_file",
		Description: "Write content to a file",
		Params: &params,
	}
}

func (a *WriteFileAction) SkipFunctionCall() bool {
	return false
}

// CheckRequiredParams checks if all required params are set
func (a *WriteFileAction) CheckRequiredParams() error {
	return a.Params.CheckRequiredParams()
}
func (a *WriteFileAction) GetName() string {
	return a.Name
}
func (a *WriteFileAction) GetDescription() string {
	return a.Description
}
func (a *WriteFileAction) SetParam(key, value string) {
	a.Params.SetParam(key, value)
}
func (a *WriteFileAction) GetParam(key string) (string, error) {
	p, err := a.Params.GetParam(key)
	
	if p == nil {
		return "", fmt.Errorf("param %s not found", key)
	}	

	return p.Value, err
}

func (a *WriteFileAction) MustGetParam(key string) string {
	v, _ := a.GetParam(key)
	return v
}
func (a *WriteFileAction) GetParams() []*action_structs.ActionParameter {
	return a.Params.GetParams()
}
func (a *WriteFileAction) SetMessage(msg *memory.Message) {}
func (a *WriteFileAction) RunPreActions(request *action_structs.ActionRequest) error {
	return errors.ErrNotImplemented
}
func (a *WriteFileAction) RunPostActions(request *action_structs.ActionRequest) error {
	return errors.ErrNotImplemented
}

func (a *WriteFileAction) GetSchema() *functions.FunctionDefinition {
	params:= make(map[string]interface{})
	
	params["type"] = "object"
	params["required"] = []string{}
	params["properties"] = make(map[string]interface{})
	
	for k := range a.GetParams() {
		p := a.GetParams()[k]
		params["properties"].(map[string]interface{})[p.Name] = make(map[string]interface{})	
		
		params["properties"].(map[string]interface{})[p.Name].(map[string]interface{})["type"] = p.Type
		params["properties"].(map[string]interface{})[p.Name].(map[string]interface{})["description"] = p.Description
		if p.Enum != nil {
			params["properties"].(map[string]interface{})[p.Name].(map[string]interface{})["enum"] = p.Enum
		}
		
		if p.Required {
			params["required"] = append(params["required"].([]string), p.Name)
		}
	}

	return &functions.FunctionDefinition{
		Name:        a.GetName(),
		Description: a.GetDescription(),
		Parameters:  params,
	}
}
